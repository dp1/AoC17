=== Original instructions ===

set b 99
set c b
jnz a 2
jnz 1 5
mul b 100
sub b -100000
set c b
sub c -17000
set f 1
set d 2
set e 2
set g d
mul g e
sub g b
jnz g 2
set f 0
sub e -1
set g e
sub g b
jnz g -8
sub d -1
set g d
sub g b
jnz g -13
jnz f 2
sub h -1
set g b
sub g c
jnz g 2
jnz 1 3
sub b -17
jnz 1 -23


=== Loop and if identification ===

set b 99
set c b

jnz a 2
jnz 1 5
mul b 100
sub b -100000
set c b
sub c -17000

	set f 1
	set d 2
		set e 2
			set g d
			mul g e
			sub g b

			jnz g 2
			set f 0

			sub e -1
			set g e
			sub g b
			jnz g -8
		sub d -1
		set g d
		sub g b
		jnz g -13

	jnz f 2
	sub h -1

	set g b
	sub g c

	jnz g 2
	jnz 1 3
	sub b -17
	jnz 1 -23


=== Higher level reconstruction ===

c = b = 99

if a != 0:
	b = b * 100 + 100000
	c = b + 17000
#b = 109900
#c = 126900

	f = 1
	d = 2
		e = 2
			g = d * e - b
			
			if g == 0:
				f = 0
			
			
			e += 1
			g = e - b
			if g != 0: loop
		d += 1
		g = d - b
		if g != 0 loop
	
	if f == 0
		h += 1
	
	g = b - c
	if g == 0: break
	b += 17
	loop


=== Python-ish reconstruction ===

b = 109900
c = 126900

for b in range(109900, c + 1, 17):
	f = 1
	for d in range(2, b + 1):
		for e in range(2, b + 1):
			if d * e == b:
				f = 0
	
	if f == 0
		h += 1


=== Optimization ===

b = 109900
c = 126900

for b in range(109900, c + 1, 17):
	if not prime(b):
		h += 1
